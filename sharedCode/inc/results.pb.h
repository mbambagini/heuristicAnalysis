// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: results.proto

#ifndef PROTOBUF_results_2eproto__INCLUDED
#define PROTOBUF_results_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace GlobalResults {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_results_2eproto();
void protobuf_AssignDesc_results_2eproto();
void protobuf_ShutdownFile_results_2eproto();

class Consumption;
class AlgorithmInvocation;
class GlobalResult;

// ===================================================================

class Consumption : public ::google::protobuf::Message {
 public:
  Consumption();
  virtual ~Consumption();
  
  Consumption(const Consumption& from);
  
  inline Consumption& operator=(const Consumption& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Consumption& default_instance();
  
  void Swap(Consumption* other);
  
  // implements Message ----------------------------------------------
  
  Consumption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Consumption& from);
  void MergeFrom(const Consumption& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 core = 1;
  inline bool has_core() const;
  inline void clear_core();
  static const int kCoreFieldNumber = 1;
  inline ::google::protobuf::int32 core() const;
  inline void set_core(::google::protobuf::int32 value);
  
  // required double meanP = 2;
  inline bool has_meanp() const;
  inline void clear_meanp();
  static const int kMeanPFieldNumber = 2;
  inline double meanp() const;
  inline void set_meanp(double value);
  
  // required double u = 3;
  inline bool has_u() const;
  inline void clear_u();
  static const int kUFieldNumber = 3;
  inline double u() const;
  inline void set_u(double value);
  
  // required int32 nOfTasks = 4;
  inline bool has_noftasks() const;
  inline void clear_noftasks();
  static const int kNOfTasksFieldNumber = 4;
  inline ::google::protobuf::int32 noftasks() const;
  inline void set_noftasks(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:GlobalResults.Consumption)
 private:
  inline void set_has_core();
  inline void clear_has_core();
  inline void set_has_meanp();
  inline void clear_has_meanp();
  inline void set_has_u();
  inline void clear_has_u();
  inline void set_has_noftasks();
  inline void clear_has_noftasks();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double meanp_;
  ::google::protobuf::int32 core_;
  ::google::protobuf::int32 noftasks_;
  double u_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_results_2eproto();
  friend void protobuf_AssignDesc_results_2eproto();
  friend void protobuf_ShutdownFile_results_2eproto();
  
  void InitAsDefaultInstance();
  static Consumption* default_instance_;
};
// -------------------------------------------------------------------

class AlgorithmInvocation : public ::google::protobuf::Message {
 public:
  AlgorithmInvocation();
  virtual ~AlgorithmInvocation();
  
  AlgorithmInvocation(const AlgorithmInvocation& from);
  
  inline AlgorithmInvocation& operator=(const AlgorithmInvocation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlgorithmInvocation& default_instance();
  
  void Swap(AlgorithmInvocation* other);
  
  // implements Message ----------------------------------------------
  
  AlgorithmInvocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlgorithmInvocation& from);
  void MergeFrom(const AlgorithmInvocation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 TSA = 1;
  inline bool has_tsa() const;
  inline void clear_tsa();
  static const int kTSAFieldNumber = 1;
  inline ::google::protobuf::int32 tsa() const;
  inline void set_tsa(::google::protobuf::int32 value);
  
  // required int32 CSA = 2;
  inline bool has_csa() const;
  inline void clear_csa();
  static const int kCSAFieldNumber = 2;
  inline ::google::protobuf::int32 csa() const;
  inline void set_csa(::google::protobuf::int32 value);
  
  // required int32 nOfCores = 3;
  inline bool has_nofcores() const;
  inline void clear_nofcores();
  static const int kNOfCoresFieldNumber = 3;
  inline ::google::protobuf::int32 nofcores() const;
  inline void set_nofcores(::google::protobuf::int32 value);
  
  // required double u = 4;
  inline bool has_u() const;
  inline void clear_u();
  static const int kUFieldNumber = 4;
  inline double u() const;
  inline void set_u(double value);
  
  // repeated .GlobalResults.Consumption cons = 5;
  inline int cons_size() const;
  inline void clear_cons();
  static const int kConsFieldNumber = 5;
  inline const ::GlobalResults::Consumption& cons(int index) const;
  inline ::GlobalResults::Consumption* mutable_cons(int index);
  inline ::GlobalResults::Consumption* add_cons();
  inline const ::google::protobuf::RepeatedPtrField< ::GlobalResults::Consumption >&
      cons() const;
  inline ::google::protobuf::RepeatedPtrField< ::GlobalResults::Consumption >*
      mutable_cons();
  
  // required bool feasible = 6;
  inline bool has_feasible() const;
  inline void clear_feasible();
  static const int kFeasibleFieldNumber = 6;
  inline bool feasible() const;
  inline void set_feasible(bool value);
  
  // @@protoc_insertion_point(class_scope:GlobalResults.AlgorithmInvocation)
 private:
  inline void set_has_tsa();
  inline void clear_has_tsa();
  inline void set_has_csa();
  inline void clear_has_csa();
  inline void set_has_nofcores();
  inline void clear_has_nofcores();
  inline void set_has_u();
  inline void clear_has_u();
  inline void set_has_feasible();
  inline void clear_has_feasible();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 tsa_;
  ::google::protobuf::int32 csa_;
  double u_;
  ::google::protobuf::int32 nofcores_;
  bool feasible_;
  ::google::protobuf::RepeatedPtrField< ::GlobalResults::Consumption > cons_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_results_2eproto();
  friend void protobuf_AssignDesc_results_2eproto();
  friend void protobuf_ShutdownFile_results_2eproto();
  
  void InitAsDefaultInstance();
  static AlgorithmInvocation* default_instance_;
};
// -------------------------------------------------------------------

class GlobalResult : public ::google::protobuf::Message {
 public:
  GlobalResult();
  virtual ~GlobalResult();
  
  GlobalResult(const GlobalResult& from);
  
  inline GlobalResult& operator=(const GlobalResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalResult& default_instance();
  
  void Swap(GlobalResult* other);
  
  // implements Message ----------------------------------------------
  
  GlobalResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalResult& from);
  void MergeFrom(const GlobalResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .GlobalResults.AlgorithmInvocation results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline const ::GlobalResults::AlgorithmInvocation& results(int index) const;
  inline ::GlobalResults::AlgorithmInvocation* mutable_results(int index);
  inline ::GlobalResults::AlgorithmInvocation* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::GlobalResults::AlgorithmInvocation >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::GlobalResults::AlgorithmInvocation >*
      mutable_results();
  
  // @@protoc_insertion_point(class_scope:GlobalResults.GlobalResult)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::GlobalResults::AlgorithmInvocation > results_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_results_2eproto();
  friend void protobuf_AssignDesc_results_2eproto();
  friend void protobuf_ShutdownFile_results_2eproto();
  
  void InitAsDefaultInstance();
  static GlobalResult* default_instance_;
};
// ===================================================================


// ===================================================================

// Consumption

// required int32 core = 1;
inline bool Consumption::has_core() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Consumption::set_has_core() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Consumption::clear_has_core() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Consumption::clear_core() {
  core_ = 0;
  clear_has_core();
}
inline ::google::protobuf::int32 Consumption::core() const {
  return core_;
}
inline void Consumption::set_core(::google::protobuf::int32 value) {
  set_has_core();
  core_ = value;
}

// required double meanP = 2;
inline bool Consumption::has_meanp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Consumption::set_has_meanp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Consumption::clear_has_meanp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Consumption::clear_meanp() {
  meanp_ = 0;
  clear_has_meanp();
}
inline double Consumption::meanp() const {
  return meanp_;
}
inline void Consumption::set_meanp(double value) {
  set_has_meanp();
  meanp_ = value;
}

// required double u = 3;
inline bool Consumption::has_u() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Consumption::set_has_u() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Consumption::clear_has_u() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Consumption::clear_u() {
  u_ = 0;
  clear_has_u();
}
inline double Consumption::u() const {
  return u_;
}
inline void Consumption::set_u(double value) {
  set_has_u();
  u_ = value;
}

// required int32 nOfTasks = 4;
inline bool Consumption::has_noftasks() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Consumption::set_has_noftasks() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Consumption::clear_has_noftasks() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Consumption::clear_noftasks() {
  noftasks_ = 0;
  clear_has_noftasks();
}
inline ::google::protobuf::int32 Consumption::noftasks() const {
  return noftasks_;
}
inline void Consumption::set_noftasks(::google::protobuf::int32 value) {
  set_has_noftasks();
  noftasks_ = value;
}

// -------------------------------------------------------------------

// AlgorithmInvocation

// required int32 TSA = 1;
inline bool AlgorithmInvocation::has_tsa() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlgorithmInvocation::set_has_tsa() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlgorithmInvocation::clear_has_tsa() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlgorithmInvocation::clear_tsa() {
  tsa_ = 0;
  clear_has_tsa();
}
inline ::google::protobuf::int32 AlgorithmInvocation::tsa() const {
  return tsa_;
}
inline void AlgorithmInvocation::set_tsa(::google::protobuf::int32 value) {
  set_has_tsa();
  tsa_ = value;
}

// required int32 CSA = 2;
inline bool AlgorithmInvocation::has_csa() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlgorithmInvocation::set_has_csa() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlgorithmInvocation::clear_has_csa() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlgorithmInvocation::clear_csa() {
  csa_ = 0;
  clear_has_csa();
}
inline ::google::protobuf::int32 AlgorithmInvocation::csa() const {
  return csa_;
}
inline void AlgorithmInvocation::set_csa(::google::protobuf::int32 value) {
  set_has_csa();
  csa_ = value;
}

// required int32 nOfCores = 3;
inline bool AlgorithmInvocation::has_nofcores() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlgorithmInvocation::set_has_nofcores() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlgorithmInvocation::clear_has_nofcores() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlgorithmInvocation::clear_nofcores() {
  nofcores_ = 0;
  clear_has_nofcores();
}
inline ::google::protobuf::int32 AlgorithmInvocation::nofcores() const {
  return nofcores_;
}
inline void AlgorithmInvocation::set_nofcores(::google::protobuf::int32 value) {
  set_has_nofcores();
  nofcores_ = value;
}

// required double u = 4;
inline bool AlgorithmInvocation::has_u() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlgorithmInvocation::set_has_u() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlgorithmInvocation::clear_has_u() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlgorithmInvocation::clear_u() {
  u_ = 0;
  clear_has_u();
}
inline double AlgorithmInvocation::u() const {
  return u_;
}
inline void AlgorithmInvocation::set_u(double value) {
  set_has_u();
  u_ = value;
}

// repeated .GlobalResults.Consumption cons = 5;
inline int AlgorithmInvocation::cons_size() const {
  return cons_.size();
}
inline void AlgorithmInvocation::clear_cons() {
  cons_.Clear();
}
inline const ::GlobalResults::Consumption& AlgorithmInvocation::cons(int index) const {
  return cons_.Get(index);
}
inline ::GlobalResults::Consumption* AlgorithmInvocation::mutable_cons(int index) {
  return cons_.Mutable(index);
}
inline ::GlobalResults::Consumption* AlgorithmInvocation::add_cons() {
  return cons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GlobalResults::Consumption >&
AlgorithmInvocation::cons() const {
  return cons_;
}
inline ::google::protobuf::RepeatedPtrField< ::GlobalResults::Consumption >*
AlgorithmInvocation::mutable_cons() {
  return &cons_;
}

// required bool feasible = 6;
inline bool AlgorithmInvocation::has_feasible() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlgorithmInvocation::set_has_feasible() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlgorithmInvocation::clear_has_feasible() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlgorithmInvocation::clear_feasible() {
  feasible_ = false;
  clear_has_feasible();
}
inline bool AlgorithmInvocation::feasible() const {
  return feasible_;
}
inline void AlgorithmInvocation::set_feasible(bool value) {
  set_has_feasible();
  feasible_ = value;
}

// -------------------------------------------------------------------

// GlobalResult

// repeated .GlobalResults.AlgorithmInvocation results = 1;
inline int GlobalResult::results_size() const {
  return results_.size();
}
inline void GlobalResult::clear_results() {
  results_.Clear();
}
inline const ::GlobalResults::AlgorithmInvocation& GlobalResult::results(int index) const {
  return results_.Get(index);
}
inline ::GlobalResults::AlgorithmInvocation* GlobalResult::mutable_results(int index) {
  return results_.Mutable(index);
}
inline ::GlobalResults::AlgorithmInvocation* GlobalResult::add_results() {
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GlobalResults::AlgorithmInvocation >&
GlobalResult::results() const {
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::GlobalResults::AlgorithmInvocation >*
GlobalResult::mutable_results() {
  return &results_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GlobalResults

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_results_2eproto__INCLUDED
