// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: simulations.proto

#ifndef PROTOBUF_simulations_2eproto__INCLUDED
#define PROTOBUF_simulations_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Simulations {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_simulations_2eproto();
void protobuf_AssignDesc_simulations_2eproto();
void protobuf_ShutdownFile_simulations_2eproto();

class Task;
class Core;
class Simulation;

// ===================================================================

class Task : public ::google::protobuf::Message {
 public:
  Task();
  virtual ~Task();

  Task(const Task& from);

  inline Task& operator=(const Task& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Task& default_instance();

  void Swap(Task* other);

  // implements Message ----------------------------------------------

  Task* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Task& from);
  void MergeFrom(const Task& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 period = 2;
  inline bool has_period() const;
  inline void clear_period();
  static const int kPeriodFieldNumber = 2;
  inline ::google::protobuf::int32 period() const;
  inline void set_period(::google::protobuf::int32 value);

  // required int32 deadline = 3;
  inline bool has_deadline() const;
  inline void clear_deadline();
  static const int kDeadlineFieldNumber = 3;
  inline ::google::protobuf::int32 deadline() const;
  inline void set_deadline(::google::protobuf::int32 value);

  // required int32 wcet = 4;
  inline bool has_wcet() const;
  inline void clear_wcet();
  static const int kWcetFieldNumber = 4;
  inline ::google::protobuf::int32 wcet() const;
  inline void set_wcet(::google::protobuf::int32 value);

  // required int32 core = 5;
  inline bool has_core() const;
  inline void clear_core();
  static const int kCoreFieldNumber = 5;
  inline ::google::protobuf::int32 core() const;
  inline void set_core(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Simulations.Task)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_period();
  inline void clear_has_period();
  inline void set_has_deadline();
  inline void clear_has_deadline();
  inline void set_has_wcet();
  inline void clear_has_wcet();
  inline void set_has_core();
  inline void clear_has_core();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 period_;
  ::google::protobuf::int32 deadline_;
  ::google::protobuf::int32 wcet_;
  ::google::protobuf::int32 core_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_simulations_2eproto();
  friend void protobuf_AssignDesc_simulations_2eproto();
  friend void protobuf_ShutdownFile_simulations_2eproto();

  void InitAsDefaultInstance();
  static Task* default_instance_;
};
// -------------------------------------------------------------------

class Core : public ::google::protobuf::Message {
 public:
  Core();
  virtual ~Core();

  Core(const Core& from);

  inline Core& operator=(const Core& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Core& default_instance();

  void Swap(Core* other);

  // implements Message ----------------------------------------------

  Core* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Core& from);
  void MergeFrom(const Core& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required float u = 2;
  inline bool has_u() const;
  inline void clear_u();
  static const int kUFieldNumber = 2;
  inline float u() const;
  inline void set_u(float value);

  // @@protoc_insertion_point(class_scope:Simulations.Core)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_u();
  inline void clear_has_u();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  float u_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_simulations_2eproto();
  friend void protobuf_AssignDesc_simulations_2eproto();
  friend void protobuf_ShutdownFile_simulations_2eproto();

  void InitAsDefaultInstance();
  static Core* default_instance_;
};
// -------------------------------------------------------------------

class Simulation : public ::google::protobuf::Message {
 public:
  Simulation();
  virtual ~Simulation();

  Simulation(const Simulation& from);

  inline Simulation& operator=(const Simulation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Simulation& default_instance();

  void Swap(Simulation* other);

  // implements Message ----------------------------------------------

  Simulation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Simulation& from);
  void MergeFrom(const Simulation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Simulations.Task tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::Simulations::Task& tasks(int index) const;
  inline ::Simulations::Task* mutable_tasks(int index);
  inline ::Simulations::Task* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::Simulations::Task >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::Simulations::Task >*
      mutable_tasks();

  // repeated .Simulations.Core cores = 2;
  inline int cores_size() const;
  inline void clear_cores();
  static const int kCoresFieldNumber = 2;
  inline const ::Simulations::Core& cores(int index) const;
  inline ::Simulations::Core* mutable_cores(int index);
  inline ::Simulations::Core* add_cores();
  inline const ::google::protobuf::RepeatedPtrField< ::Simulations::Core >&
      cores() const;
  inline ::google::protobuf::RepeatedPtrField< ::Simulations::Core >*
      mutable_cores();

  // required bool feasible = 3;
  inline bool has_feasible() const;
  inline void clear_feasible();
  static const int kFeasibleFieldNumber = 3;
  inline bool feasible() const;
  inline void set_feasible(bool value);

  // required int32 csa = 4;
  inline bool has_csa() const;
  inline void clear_csa();
  static const int kCsaFieldNumber = 4;
  inline ::google::protobuf::int32 csa() const;
  inline void set_csa(::google::protobuf::int32 value);

  // required int32 tsa = 5;
  inline bool has_tsa() const;
  inline void clear_tsa();
  static const int kTsaFieldNumber = 5;
  inline ::google::protobuf::int32 tsa() const;
  inline void set_tsa(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Simulations.Simulation)
 private:
  inline void set_has_feasible();
  inline void clear_has_feasible();
  inline void set_has_csa();
  inline void clear_has_csa();
  inline void set_has_tsa();
  inline void clear_has_tsa();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Simulations::Task > tasks_;
  ::google::protobuf::RepeatedPtrField< ::Simulations::Core > cores_;
  bool feasible_;
  ::google::protobuf::int32 csa_;
  ::google::protobuf::int32 tsa_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_simulations_2eproto();
  friend void protobuf_AssignDesc_simulations_2eproto();
  friend void protobuf_ShutdownFile_simulations_2eproto();

  void InitAsDefaultInstance();
  static Simulation* default_instance_;
};
// ===================================================================


// ===================================================================

// Task

// required int32 id = 1;
inline bool Task::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Task::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Task::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Task::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Task::id() const {
  return id_;
}
inline void Task::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 period = 2;
inline bool Task::has_period() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Task::set_has_period() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Task::clear_has_period() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Task::clear_period() {
  period_ = 0;
  clear_has_period();
}
inline ::google::protobuf::int32 Task::period() const {
  return period_;
}
inline void Task::set_period(::google::protobuf::int32 value) {
  set_has_period();
  period_ = value;
}

// required int32 deadline = 3;
inline bool Task::has_deadline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Task::set_has_deadline() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Task::clear_has_deadline() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Task::clear_deadline() {
  deadline_ = 0;
  clear_has_deadline();
}
inline ::google::protobuf::int32 Task::deadline() const {
  return deadline_;
}
inline void Task::set_deadline(::google::protobuf::int32 value) {
  set_has_deadline();
  deadline_ = value;
}

// required int32 wcet = 4;
inline bool Task::has_wcet() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Task::set_has_wcet() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Task::clear_has_wcet() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Task::clear_wcet() {
  wcet_ = 0;
  clear_has_wcet();
}
inline ::google::protobuf::int32 Task::wcet() const {
  return wcet_;
}
inline void Task::set_wcet(::google::protobuf::int32 value) {
  set_has_wcet();
  wcet_ = value;
}

// required int32 core = 5;
inline bool Task::has_core() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Task::set_has_core() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Task::clear_has_core() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Task::clear_core() {
  core_ = 0;
  clear_has_core();
}
inline ::google::protobuf::int32 Task::core() const {
  return core_;
}
inline void Task::set_core(::google::protobuf::int32 value) {
  set_has_core();
  core_ = value;
}

// -------------------------------------------------------------------

// Core

// required int32 id = 1;
inline bool Core::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Core::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Core::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Core::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Core::id() const {
  return id_;
}
inline void Core::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required float u = 2;
inline bool Core::has_u() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Core::set_has_u() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Core::clear_has_u() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Core::clear_u() {
  u_ = 0;
  clear_has_u();
}
inline float Core::u() const {
  return u_;
}
inline void Core::set_u(float value) {
  set_has_u();
  u_ = value;
}

// -------------------------------------------------------------------

// Simulation

// repeated .Simulations.Task tasks = 1;
inline int Simulation::tasks_size() const {
  return tasks_.size();
}
inline void Simulation::clear_tasks() {
  tasks_.Clear();
}
inline const ::Simulations::Task& Simulation::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::Simulations::Task* Simulation::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::Simulations::Task* Simulation::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Simulations::Task >&
Simulation::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::Simulations::Task >*
Simulation::mutable_tasks() {
  return &tasks_;
}

// repeated .Simulations.Core cores = 2;
inline int Simulation::cores_size() const {
  return cores_.size();
}
inline void Simulation::clear_cores() {
  cores_.Clear();
}
inline const ::Simulations::Core& Simulation::cores(int index) const {
  return cores_.Get(index);
}
inline ::Simulations::Core* Simulation::mutable_cores(int index) {
  return cores_.Mutable(index);
}
inline ::Simulations::Core* Simulation::add_cores() {
  return cores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Simulations::Core >&
Simulation::cores() const {
  return cores_;
}
inline ::google::protobuf::RepeatedPtrField< ::Simulations::Core >*
Simulation::mutable_cores() {
  return &cores_;
}

// required bool feasible = 3;
inline bool Simulation::has_feasible() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Simulation::set_has_feasible() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Simulation::clear_has_feasible() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Simulation::clear_feasible() {
  feasible_ = false;
  clear_has_feasible();
}
inline bool Simulation::feasible() const {
  return feasible_;
}
inline void Simulation::set_feasible(bool value) {
  set_has_feasible();
  feasible_ = value;
}

// required int32 csa = 4;
inline bool Simulation::has_csa() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Simulation::set_has_csa() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Simulation::clear_has_csa() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Simulation::clear_csa() {
  csa_ = 0;
  clear_has_csa();
}
inline ::google::protobuf::int32 Simulation::csa() const {
  return csa_;
}
inline void Simulation::set_csa(::google::protobuf::int32 value) {
  set_has_csa();
  csa_ = value;
}

// required int32 tsa = 5;
inline bool Simulation::has_tsa() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Simulation::set_has_tsa() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Simulation::clear_has_tsa() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Simulation::clear_tsa() {
  tsa_ = 0;
  clear_has_tsa();
}
inline ::google::protobuf::int32 Simulation::tsa() const {
  return tsa_;
}
inline void Simulation::set_tsa(::google::protobuf::int32 value) {
  set_has_tsa();
  tsa_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Simulations

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_simulations_2eproto__INCLUDED
